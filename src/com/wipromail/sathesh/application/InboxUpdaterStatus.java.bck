package com.wipromail.sathesh.application;

import java.util.Date;

import android.content.Context;
import android.util.Log;

import com.wipromail.sathesh.adapter.CacheLastSuccessfulInboxSyncAdapter;
import com.wipromail.sathesh.constants.Constants;
import com.wipromail.sathesh.customexceptions.StoredDateIsNullException;

public class InboxUpdaterStatus implements Constants{

	private static InboxUpdaterStatus inboxUpdaterStatus;
	private String status = "";
	private String executionType = "";

	public static final String TYPE_AUTO_UPDATE="TYPE_AUTO_UPDATE";
	public static final String TYPE_MANUAL_UPDATE="TYPE_MANUAL_UPDATE";
	public static final String TYPE_SERVICE_UPDATE="TYPE_SERVICE_UPDATE";
	
	
	public static final String STATUS_RUNNING="STATUS_RUNNING";
	public static final String STATUS_DONE="STATUS_DONE";
	public static final String STATUS_INTERRUPTED="STATUS_INTERRUPTED";
	public static final String STATUS_ERROR="STATUS_ERROR";
	
	static {
		setInboxUpdater(new InboxUpdaterStatus());
	}

	

	public static InboxUpdaterStatus getInboxUpdater() {
		return inboxUpdaterStatus;
	}

	public static void setInboxUpdater(InboxUpdaterStatus inboxUpdaterStatus) {
		InboxUpdaterStatus.inboxUpdaterStatus = inboxUpdaterStatus;
	}

	/** gets the last successful update of the inbox from Shared Prefernce storage
	 * @param context
	 * @return
	 * @throws Exception
	 */
	public Date getLastSuccessfulSync(Context context) throws Exception {
		/*String lastUpdateStr = SharedPreferencesAdapter.getLastSuccessfulInboxUpdate(context);
	    if (null != lastUpdateStr && (!(lastUpdateStr.equalsIgnoreCase(""))))
	    {
	    	return  new Date(lastUpdateStr);
	    	
	     }
	     */
		Date lastSyncdate = CacheLastSuccessfulInboxSyncAdapter.getLastSyncDate(context);
		if(null != lastSyncdate){
			return lastSyncdate;
		}
	    else{
	    Log.d(TAG, "InboxUpdaterStatus -> The last successful inbox update time is null. This is the first time sync.");
        throw new StoredDateIsNullException();
	    }
	}

	/** sets the last successful update of the inbox from Shared Prefernce storage
	 * @param context
	 * @param lastSuccessfulRun
	 * @throws Exception
	 */
	public void setLastSuccessfulSync(Context context,Date lastSuccessfulRun) throws Exception{
		/*
		SharedPreferencesAdapter.storeLastSuccessfulInboxUpdate(
				context, 
				(lastSuccessfulRun != null) ? lastSuccessfulRun.toString() : ""
				);
				*/
		
		CacheLastSuccessfulInboxSyncAdapter.storeLastSyncDate(context, lastSuccessfulRun);
	}

	
	/** Flag to store whether the inital sync has been done 
	 * @param context
	 * @return
	 * @throws Exception
	 */
	public String getIsInboxInitialSyncDone(Context context) throws Exception {
		
		return SharedPreferencesAdapter.getIsInboxInitialSyncDone(context);

	}

	/** Flag to store whether the inital sync has been done 
	 * @param context
	 * @param lastSuccessfulRun
	 * @throws Exception
	 */
	public void storeIsInboxInitialSyncDone(Context context,String value) throws Exception{
	SharedPreferencesAdapter.storeIsInboxInitialSyncDone(context, value);
	}
	
	public String getExecutionType() {
		return executionType;
	}

	public void setExecutionType(String executionType) {
		this.executionType = executionType;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

}
